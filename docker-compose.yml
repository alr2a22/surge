version: "3.8"

services:
  cache:
    container_name: cache-redis
    image: ${REGISTRY}/library/redis:7.0.7
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1s
      timeout: 20s
      retries: 5

  db:
    container_name: db-postgres
    image: ${REGISTRY}/postgis/postgis:14-master
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3

  adminer:
    container_name: adminer
    image: ${REGISTRY}/library/adminer:4.8.1
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
  app:
    container_name: app
    build:
      context: .
      args:
        REGISTRY: ${REGISTRY}
    restart: always
    ports:
      - "3000:3000"
    command: /app/main migrate && /app/main run-server
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - LOGLEVEL=${LOGLEVEL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_VALID_DAYS=${JWT_VALID_DAYS}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
